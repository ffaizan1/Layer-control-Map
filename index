<!DOCTYPE html>
<html>
    <head>
        <title>Lab 4</title>

        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
           integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
           crossorigin=""/>

        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
           integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
           crossorigin=""></script>

        <style type="text/css">
          html, body { margin: 0; padding: 0; height: 100%; }
          #map { min-height: 100%; }
        </style>
        <script type="text/javascript" src="data2.js"></script>
        <script type="text/javascript" src="data.js"></script>
        <style>
		
          .legend {
              padding: 6px 8px;
              line-height: 18px;
              background: rgba(255,255,255,0.9);
              box-shadow: 0 0 15px rgba(0,0,0,0.2);
              border-radius: 5px;
          }

           .legend i {
              width: 18px;
              height: 18px;
              float: left;
              margin-right: 8px;
              opacity: 0.7;
          }

          #map-heading {
            position: absolute;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            background-color: white;
            border: 2px solid black;
            padding: 10px;
            z-index: 1000;
            font-family: Arial, sans-serif;
          }
        </style>
    </head>
    <body>
        <h1 id="map-heading">Your Map Title</h1>
        <div id="map"></div>

        <script type="text/javascript">

          var map = L.map('map', {
              center: [41.890979, -87.630955],
              zoom: 10
          });

          var Openstreet = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
           attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
             maxZoom: 10,
             minZoom: 5
           }).addTo(map);

           var Esri_WorldTopoMap = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}', {
	attribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community'
});

          // Functions to get color and style for Population Density
          function getColor(value) {
              return value > 8275 ? '#a63603':
                     value > 5368 ? '#e6550d':
                     value > 3852 ? '#fd8d3c':
                     value > 1847 ? '#fdbe85':
                                   '#feedde';
          }

          function style(feature) {
              return {
                  fillColor: getColor(feature.properties.PopDen),
                  weight: 2,
                  opacity: 1,
                  color: 'black',
                  dashArray: '3',
                  fillOpacity: 0.7
              };
          }

          // Population Density layer
          var Density = L.geoJson(data, { style: style }).addTo(map);

          // Create Population Density legend
          var legendDensity = L.control({ position: 'bottomright' });
          legendDensity.onAdd = function(map) {
              var div = L.DomUtil.create('div', 'legend'),
                  grades = [0, 1847, 3852, 5368, 8275];

              div.innerHTML = '<b>Population Density <br> 2010 <br></b>';

              for (var i = 0; i < grades.length; i++) {
                  div.innerHTML +=
                      '<i style="background:' + getColor(grades[i] + 1) + '"></i> ' +
                      grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
              }

              return div;
          };

          // Functions to get color and style for Asian Population
          function getColor1(value) {
              return value > 11038 ? '#08519c':
                     value > 5653 ? '#3182bd':
                     value > 2445 ? '#6baed6':
                     value > 727 ? '#bdd7e7':
                                  '#eff3ff';
          }

          function style1(feature) {
              return {
                  fillColor: getColor1(feature.properties.Asian),
                  weight: 2,
                  opacity: 1,
                  color: 'black',
                  dashArray: '3',
                  fillOpacity: 0.7
              };
          }

          // Asian Population layer
          var Asian = L.geoJson(data2, { style: style1 });

          // Create Asian Population legend
          var legendAsian = L.control({ position: 'bottomright' });
          legendAsian.onAdd = function(map) {
              var div = L.DomUtil.create('div', 'legend'),
                  grades = [0, 727, 2445, 5653, 11038];

              div.innerHTML = '<b>Asian Population <br> 2010 <br></b>';

              for (var i = 0; i < grades.length; i++) {
                  div.innerHTML +=
                      '<i style="background:' + getColor1(grades[i] + 1) + '"></i> ' +
                      grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
              }

              return div;
          };

          var basemaps = {
              "Openstreet": Openstreet,
              "Esri_WorldTopoMap": Esri_WorldTopoMap
          };

          var overlaymaps = {
              "Population Density": Density,
              "Asian Population": Asian
          };

          L.control.layers(basemaps, overlaymaps).addTo(map);

          // Event listeners to manage legends
          map.on('overlayadd', function(eventLayer) {
              if (eventLayer.name === 'Population Density') {
                  legendDensity.addTo(map);
              }
              if (eventLayer.name === 'Asian Population') {
                  legendAsian.addTo(map);
              }
          });

          map.on('overlayremove', function(eventLayer) {
              if (eventLayer.name === 'Population Density') {
                  map.removeControl(legendDensity);
              }
              if (eventLayer.name === 'Asian Population') {
                  map.removeControl(legendAsian);
              }
          });

          // Initially show the Population Density legend
          legendDensity.addTo(map);

        </script>
    </body>
</html>